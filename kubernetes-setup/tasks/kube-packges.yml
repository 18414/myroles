---
- name: Disable SWAP
  when: ansible_swaptotal_mb > 0
  shell: |
    /usr/bin/sed -i '/swap/d' /etc/fstab
    /usr/sbin/swapoff -a
  delegate_to: '{{ item }}'
  with_items: "{{ groups['cluster'] }}"


- name: Stop firwalld if running
  when: ansible_os_family == "RedHat"
  command: systemctl stop firewalld
  ignore_errors: yes
  delegate_to: '{{ item }}'
  with_items: "{{ groups['cluster'] }}"

- name: Stop firwalld if running
  when: ansible_os_family == "Debian"
  command: service ufw stop
  ignore_errors: yes
  delegate_to: '{{ item }}'
  with_items: "{{ groups['cluster'] }}"

- name: Disable SELinux 
  when: ansible_os_family == "RedHat"
  selinux:
    state: disabled
  delegate_to: '{{ item }}'
  with_items: "{{ groups['cluster'] }}"

- name: Add Docker repo
  when: ansible_os_family == "RedHat"
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docker-ce.repo
    mode: 0644 
  delegate_to: '{{ item }}'
  with_items: "{{ groups['cluster'] }}"

- name: Install Kubernets compatible Docker 
  when: ansible_os_family == "RedHat"
  yum: 
    name: docker-ce-18.06.1.ce-3.el7*
    state: present
  delegate_to: '{{ item }}'
  with_items: "{{ groups['cluster'] }}"
  
- name: Start and enable Docker service
  when: ansible_os_family == "RedHat"
  service:
    name: docker
    state: started
    enabled: yes
  register: docser
  notify:
    - restart dockerredhat 
  delegate_to: '{{ item }}'
  with_items: "{{ groups['cluster'] }}"

- debug: msg={{ docser }}
       

- name: Create repository for kubernetes
  when: ansible_os_family == "RedHat"
  yum_repository: 
    name: kubernetes
    description:  kubernetes
    file: kuberepo
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    gpgcheck: yes
    enabled: yes
    repo_gpgcheck: yes
    gpgkey: "https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
  delegate_to: '{{ item  }}'
  with_items: "{{ groups['cluster'] }}"


- name: Install kubernetes base packages
  when: ansible_os_family == "RedHat"
  yum:   
    state: latest
    name:
    - kubelet
    - kubeadm
    - kubectl
  delegate_to: '{{ item }}'
  with_items: "{{ groups['cluster'] }}"
        
- name: Start and enable Kubelet service 
  when: ansible_os_family == "RedHat"
  service: 
    name: kubelet
    state: started
    enabled: yes
  register: kubeser
  notify:
    - restart kuberedhat 
  delegate_to: '{{ item }}'
  with_items: "{{ groups['cluster'] }}"

- debug:
    var: "{{ kubeser }}"
   
- name: Install apt-transport-https
  when: ansible_os_family == "Debian" 
  apt:
    name: "apt-transport-https"
    state: present
    update_cache: yes
  delegate_to: '{{ item }}'
  with_items: "{{ groups['cluster'] }}"

    
- name: Add Docker APT GPG key
  when: ansible_os_family == "Debian"
  apt_key: 
    url: https://download.docker.com/linux/ubuntu/gpg
  delegate_to: '{{ item }}'
  with_items: "{{ groups['cluster'] }}"


- name: Add Docker APT repository
  when: ansible_os_family == "Debian"
  apt_repository: 
    repo: deb https://download.docker.com/linux/ubuntu xenial stable
    state: present
    filename: 'docker'
  delegate_to: '{{ item }}'
  with_items: "{{ groups['cluster'] }}"


- name: Install docker engine (Debian/Ubuntu)
  when: ansible_os_family == "Debian"
  apt:
    update_cache: yes
    name: "docker-ce=17.03.2*"
    state: present
  delegate_to: '{{ item }}'
  with_items: "{{ groups['cluster'] }}"

- name: Start Docker daemon (Debian/Ubuntu)
  when: ansible_os_family == "Debian"
  service:
    name: docker
    state: started
  notify:
    - restart dockerdebian 
  delegate_to: '{{ item }}'
  with_items: "{{ groups['cluster'] }}"


- name: Hold docker version (Debian/Ubuntu)
  when: ansible_os_family == "Debian"
  dpkg_selections:
    name: "docker-ce"
    selection: hold
  delegate_to: '{{ item }}'
  with_items: "{{ groups['cluster'] }}"



- name: Add Kubernetes APT GPG key
  when: ansible_os_family == "Debian"
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  delegate_to: '{{ item }}'
  with_items: "{{ groups['cluster'] }}"


- name: Add Kubernetes APT repository
  when: ansible_os_family == "Debian"
  apt_repository:
    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: 'kubernetes'
  delegate_to: '{{ item }}'
  with_items: "{{ groups['cluster'] }}"



- name: Install kubernetes packages (Debian/Ubuntu)
  when: ansible_os_family == "Debian"
  apt:
    pkg: 
    - 'kubelet'
    - 'kubeadm'
    - 'kubectl'
    update_cache: yes
    state: present
  delegate_to: '{{ item }}'
  with_items: "{{ groups['cluster'] }}"


- name: Start Kubelet service
  when: ansible_os_family == "Debian"
  service:
    name: kubelet
    #daemon_reload: yes
    state: started
  notify:
    - restart kubedebian  
  delegate_to: "{{ item }}"
  with_items: "{{ groups['cluster'] }}"

- name: Install openssl RedHat
  yum: 
    name: openssl* 
    state: present
  when: ansible_os_family == "RedHat"
 
- name: Install openssl Debian
  apt:  
    name: openssl* 
    state: present
  when: ansible_os_family == "Debian"
